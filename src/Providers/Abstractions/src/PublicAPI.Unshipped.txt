abstract LangChain.Providers.ChatModel.GenerateAsync(LangChain.Providers.ChatRequest! request, LangChain.Providers.ChatSettings? settings = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<LangChain.Providers.ChatResponse!>!
abstract LangChain.Providers.ImageToTextModel.GenerateTextFromImageAsync(LangChain.Providers.ImageToTextRequest! request, LangChain.Providers.ImageToTextSettings? settings = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<LangChain.Providers.ImageToTextResponse!>!
LangChain.Providers.ChatModel
LangChain.Providers.ChatModel.ChatModel(string! id) -> void
LangChain.Providers.ChatModel.CompletedResponseGenerated -> System.EventHandler<string!>?
LangChain.Providers.ChatModel.OnCompletedResponseGenerated(string! token) -> void
LangChain.Providers.ChatModel.OnPartialResponseGenerated(string! token) -> void
LangChain.Providers.ChatModel.OnPromptSent(string! prompt) -> void
LangChain.Providers.ChatModel.PartialResponseGenerated -> System.EventHandler<string!>?
LangChain.Providers.ChatModel.PromptSent -> System.EventHandler<string!>?
LangChain.Providers.ChatModelExtensions
LangChain.Providers.ChatRequest
LangChain.Providers.ChatRequest.ChatRequest() -> void
LangChain.Providers.ChatRequest.Image.get -> System.BinaryData?
LangChain.Providers.ChatRequest.Image.set -> void
LangChain.Providers.ChatRequest.Messages.get -> System.Collections.Generic.IReadOnlyCollection<LangChain.Providers.Message>!
LangChain.Providers.ChatRequest.Messages.init -> void
LangChain.Providers.ChatResponse
LangChain.Providers.ChatResponse.ChatResponse() -> void
LangChain.Providers.ChatResponse.Deconstruct(out LangChain.Providers.Message message, out LangChain.Providers.Usage usage) -> void
LangChain.Providers.ChatResponse.Deconstruct(out LangChain.Providers.Message message, out LangChain.Providers.Usage usage, out LangChain.Providers.ChatSettings! usedSettings) -> void
LangChain.Providers.ChatResponse.LastMessageContent.get -> string!
LangChain.Providers.ChatResponse.Messages.get -> System.Collections.Generic.IReadOnlyCollection<LangChain.Providers.Message>!
LangChain.Providers.ChatResponse.Messages.init -> void
LangChain.Providers.ChatResponse.Usage.get -> LangChain.Providers.Usage
LangChain.Providers.ChatResponse.Usage.init -> void
LangChain.Providers.ChatResponse.UsedSettings.get -> LangChain.Providers.ChatSettings!
LangChain.Providers.ChatResponse.UsedSettings.init -> void
LangChain.Providers.ChatSettings
LangChain.Providers.ChatSettings.ChatSettings() -> void
LangChain.Providers.ChatSettings.StopSequences.get -> System.Collections.Generic.IReadOnlyList<string!>?
LangChain.Providers.ChatSettings.StopSequences.init -> void
LangChain.Providers.ChatSettings.User.get -> string?
LangChain.Providers.ChatSettings.User.init -> void
LangChain.Providers.ChatSettings.UseStreaming.get -> bool?
LangChain.Providers.ChatSettings.UseStreaming.init -> void
LangChain.Providers.Data
LangChain.Providers.Data.Data() -> void
LangChain.Providers.Data.ToBase64() -> string!
LangChain.Providers.Data.ToByteArray() -> byte[]!
LangChain.Providers.Data.ToStream() -> System.IO.MemoryStream!
LangChain.Providers.EmbeddingRequest
LangChain.Providers.EmbeddingRequest.EmbeddingRequest() -> void
LangChain.Providers.EmbeddingRequest.Images.get -> System.Collections.Generic.IList<LangChain.Providers.Data!>!
LangChain.Providers.EmbeddingRequest.Images.init -> void
LangChain.Providers.EmbeddingRequest.Strings.get -> System.Collections.Generic.IList<string!>!
LangChain.Providers.EmbeddingRequest.Strings.init -> void
LangChain.Providers.EmbeddingResponse
LangChain.Providers.EmbeddingResponse.Deconstruct(out float[]! values, out LangChain.Providers.Usage usage) -> void
LangChain.Providers.EmbeddingResponse.Deconstruct(out float[]! values, out LangChain.Providers.Usage usage, out LangChain.Providers.EmbeddingSettings! usedSettings) -> void
LangChain.Providers.EmbeddingResponse.EmbeddingResponse() -> void
LangChain.Providers.EmbeddingResponse.ToSingleArray() -> float[]!
LangChain.Providers.EmbeddingResponse.Usage.get -> LangChain.Providers.Usage
LangChain.Providers.EmbeddingResponse.Usage.init -> void
LangChain.Providers.EmbeddingResponse.UsedSettings.get -> LangChain.Providers.EmbeddingSettings!
LangChain.Providers.EmbeddingResponse.UsedSettings.init -> void
LangChain.Providers.EmbeddingResponse.Values.get -> float[]![]!
LangChain.Providers.EmbeddingResponse.Values.init -> void
LangChain.Providers.EmbeddingSettings
LangChain.Providers.EmbeddingSettings.EmbeddingSettings() -> void
LangChain.Providers.IChatModel
LangChain.Providers.IChatModel.CompletedResponseGenerated -> System.EventHandler<string!>?
LangChain.Providers.IChatModel.ContextLength.get -> int
LangChain.Providers.IChatModel.GenerateAsync(LangChain.Providers.ChatRequest! request, LangChain.Providers.ChatSettings? settings = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<LangChain.Providers.ChatResponse!>!
LangChain.Providers.IChatModel.PartialResponseGenerated -> System.EventHandler<string!>?
LangChain.Providers.IChatModel.PromptSent -> System.EventHandler<string!>?
LangChain.Providers.IChatModel<TRequest, TResponse, TSettings>
LangChain.Providers.IChatModel<TRequest, TResponse, TSettings>.GenerateAsync(TRequest request, TSettings? settings = default(TSettings?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<TResponse>!
LangChain.Providers.IChatModelWithTokenCounting
LangChain.Providers.IEmbeddingModel
LangChain.Providers.IEmbeddingModel.CreateEmbeddingsAsync(LangChain.Providers.EmbeddingRequest! request, LangChain.Providers.EmbeddingSettings? settings = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<LangChain.Providers.EmbeddingResponse!>!
LangChain.Providers.IEmbeddingModel.MaximumInputLength.get -> int
LangChain.Providers.IImageToTextModel
LangChain.Providers.IImageToTextModel.GenerateTextFromImageAsync(LangChain.Providers.ImageToTextRequest! request, LangChain.Providers.ImageToTextSettings? settings = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<LangChain.Providers.ImageToTextResponse!>!
LangChain.Providers.IImageToTextModel<TRequest, TResponse, TSettings>
LangChain.Providers.IImageToTextModel<TRequest, TResponse, TSettings>.GenerateTextFromImageAsync(TRequest request, TSettings? settings = default(TSettings?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<TResponse>!
LangChain.Providers.ImageToTextModel
LangChain.Providers.ImageToTextModel.ImageToTextModel(string! id) -> void
LangChain.Providers.ImageToTextRequest
LangChain.Providers.ImageToTextRequest.Image.get -> System.BinaryData!
LangChain.Providers.ImageToTextRequest.Image.init -> void
LangChain.Providers.ImageToTextRequest.ImageToTextRequest() -> void
LangChain.Providers.ImageToTextResponse
LangChain.Providers.ImageToTextResponse.ImageToTextResponse() -> void
LangChain.Providers.ImageToTextResponse.Text.get -> string?
LangChain.Providers.ImageToTextResponse.Text.set -> void
LangChain.Providers.ImageToTextResponse.Usage.get -> LangChain.Providers.Usage
LangChain.Providers.ImageToTextResponse.Usage.init -> void
LangChain.Providers.ImageToTextResponse.UsedSettings.get -> LangChain.Providers.ImageToTextSettings!
LangChain.Providers.ImageToTextResponse.UsedSettings.init -> void
LangChain.Providers.ImageToTextSettings
LangChain.Providers.ImageToTextSettings.ImageToTextSettings() -> void
LangChain.Providers.ImageToTextSettings.User.get -> string?
LangChain.Providers.ImageToTextSettings.User.init -> void
LangChain.Providers.IMaximumInputTokens
LangChain.Providers.IMaximumInputTokens.MaximumInputTokens.get -> int
LangChain.Providers.IModel
LangChain.Providers.IModel.AddUsage(LangChain.Providers.Usage usage) -> void
LangChain.Providers.IModel.Id.get -> string!
LangChain.Providers.IModel.Usage.get -> LangChain.Providers.Usage
LangChain.Providers.IModel<TSettings>
LangChain.Providers.IModel<TSettings>.Settings.get -> TSettings?
LangChain.Providers.IModel<TSettings>.Settings.init -> void
LangChain.Providers.IModerationModel
LangChain.Providers.IModerationModel.CheckViolationAsync(LangChain.Providers.ModerationRequest! request, LangChain.Providers.ModerationSettings? settings = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<LangChain.Providers.ModerationResponse!>!
LangChain.Providers.IModerationModel.RecommendedModerationChunkSize.get -> int
LangChain.Providers.IPaidLargeLanguageModel
LangChain.Providers.IPaidLargeLanguageModel.CalculatePriceInUsd(int inputTokens, int outputTokens) -> double
LangChain.Providers.IProvider
LangChain.Providers.IProvider.ChatSettings.get -> LangChain.Providers.ChatSettings?
LangChain.Providers.IProvider.ChatSettings.init -> void
LangChain.Providers.IProvider.EmbeddingSettings.get -> LangChain.Providers.EmbeddingSettings?
LangChain.Providers.IProvider.EmbeddingSettings.init -> void
LangChain.Providers.IProvider.ModerationSettings.get -> LangChain.Providers.ModerationSettings?
LangChain.Providers.IProvider.ModerationSettings.init -> void
LangChain.Providers.IProvider.SpeechToTextSettings.get -> LangChain.Providers.SpeechToTextSettings?
LangChain.Providers.IProvider.SpeechToTextSettings.init -> void
LangChain.Providers.IProvider.TextToImageSettings.get -> LangChain.Providers.TextToImageSettings?
LangChain.Providers.IProvider.TextToImageSettings.init -> void
LangChain.Providers.IProvider.TextToSpeechSettings.get -> LangChain.Providers.TextToSpeechSettings?
LangChain.Providers.IProvider.TextToSpeechSettings.init -> void
LangChain.Providers.ISpeechToTextModel
LangChain.Providers.ISpeechToTextModel.TranscribeAsync(LangChain.Providers.SpeechToTextRequest! request, LangChain.Providers.SpeechToTextSettings? settings = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<LangChain.Providers.SpeechToTextResponse!>!
LangChain.Providers.ISupportsCountTokens
LangChain.Providers.ISupportsCountTokens.CountTokens(LangChain.Providers.ChatRequest! request) -> int
LangChain.Providers.ISupportsCountTokens.CountTokens(string! text) -> int
LangChain.Providers.ISupportsCountTokens.CountTokens(System.Collections.Generic.IReadOnlyCollection<LangChain.Providers.Message>! messages) -> int
LangChain.Providers.ITextToImageModel
LangChain.Providers.ITextToImageModel.GenerateImageAsync(LangChain.Providers.TextToImageRequest! request, LangChain.Providers.TextToImageSettings? settings = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<LangChain.Providers.TextToImageResponse!>!
LangChain.Providers.ITextToImageModel.PromptSent -> System.EventHandler<string!>?
LangChain.Providers.ITextToSpeechModel
LangChain.Providers.ITextToSpeechModel.GenerateSpeechAsync(LangChain.Providers.TextToSpeechRequest! request, LangChain.Providers.TextToSpeechSettings? settings = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<LangChain.Providers.TextToSpeechResponse!>!
LangChain.Providers.Message
LangChain.Providers.Message.Content.get -> string!
LangChain.Providers.Message.Content.init -> void
LangChain.Providers.Message.FunctionName.get -> string?
LangChain.Providers.Message.FunctionName.init -> void
LangChain.Providers.Message.Message() -> void
LangChain.Providers.Message.Message(string! Content, LangChain.Providers.MessageRole Role, string? FunctionName = null) -> void
LangChain.Providers.Message.Role.get -> LangChain.Providers.MessageRole
LangChain.Providers.Message.Role.init -> void
LangChain.Providers.MessageRole
LangChain.Providers.MessageRole.Ai = 2 -> LangChain.Providers.MessageRole
LangChain.Providers.MessageRole.Chat = 3 -> LangChain.Providers.MessageRole
LangChain.Providers.MessageRole.FunctionCall = 4 -> LangChain.Providers.MessageRole
LangChain.Providers.MessageRole.FunctionResult = 5 -> LangChain.Providers.MessageRole
LangChain.Providers.MessageRole.Human = 1 -> LangChain.Providers.MessageRole
LangChain.Providers.MessageRole.System = 0 -> LangChain.Providers.MessageRole
LangChain.Providers.MessageStringExtensions
LangChain.Providers.Model
LangChain.Providers.Model.AddUsage(LangChain.Providers.Usage usage) -> void
LangChain.Providers.Model.Id.get -> string!
LangChain.Providers.Model.Model(string! id) -> void
LangChain.Providers.Model.Usage.get -> LangChain.Providers.Usage
LangChain.Providers.Model.Usage.set -> void
LangChain.Providers.Model<TSettings>
LangChain.Providers.Model<TSettings>.Model(string! id) -> void
LangChain.Providers.Model<TSettings>.Settings.get -> TSettings?
LangChain.Providers.Model<TSettings>.Settings.init -> void
LangChain.Providers.ModerationRequest
LangChain.Providers.ModerationRequest.ModerationRequest() -> void
LangChain.Providers.ModerationRequest.Prompt.get -> string!
LangChain.Providers.ModerationRequest.Prompt.init -> void
LangChain.Providers.ModerationResponse
LangChain.Providers.ModerationResponse.Deconstruct(out bool isValid, out LangChain.Providers.Usage usage) -> void
LangChain.Providers.ModerationResponse.IsValid.get -> bool
LangChain.Providers.ModerationResponse.IsValid.init -> void
LangChain.Providers.ModerationResponse.ModerationResponse() -> void
LangChain.Providers.ModerationResponse.ToBoolean() -> bool
LangChain.Providers.ModerationResponse.Usage.get -> LangChain.Providers.Usage
LangChain.Providers.ModerationResponse.Usage.init -> void
LangChain.Providers.ModerationSettings
LangChain.Providers.ModerationSettings.ModerationSettings() -> void
LangChain.Providers.Provider
LangChain.Providers.Provider.ChatSettings.get -> LangChain.Providers.ChatSettings?
LangChain.Providers.Provider.ChatSettings.init -> void
LangChain.Providers.Provider.EmbeddingSettings.get -> LangChain.Providers.EmbeddingSettings?
LangChain.Providers.Provider.EmbeddingSettings.init -> void
LangChain.Providers.Provider.ImageToTextSettings.get -> LangChain.Providers.ImageToTextSettings?
LangChain.Providers.Provider.ImageToTextSettings.init -> void
LangChain.Providers.Provider.ModerationSettings.get -> LangChain.Providers.ModerationSettings?
LangChain.Providers.Provider.ModerationSettings.init -> void
LangChain.Providers.Provider.Provider(string! id) -> void
LangChain.Providers.Provider.SpeechToTextSettings.get -> LangChain.Providers.SpeechToTextSettings?
LangChain.Providers.Provider.SpeechToTextSettings.init -> void
LangChain.Providers.Provider.TextToImageSettings.get -> LangChain.Providers.TextToImageSettings?
LangChain.Providers.Provider.TextToImageSettings.init -> void
LangChain.Providers.Provider.TextToSpeechSettings.get -> LangChain.Providers.TextToSpeechSettings?
LangChain.Providers.Provider.TextToSpeechSettings.init -> void
LangChain.Providers.SpeechToTextRequest
LangChain.Providers.SpeechToTextRequest.Dispose() -> void
LangChain.Providers.SpeechToTextRequest.OwnsStream.get -> bool
LangChain.Providers.SpeechToTextRequest.OwnsStream.init -> void
LangChain.Providers.SpeechToTextRequest.SpeechToTextRequest() -> void
LangChain.Providers.SpeechToTextRequest.Stream.get -> System.IO.Stream!
LangChain.Providers.SpeechToTextRequest.Stream.init -> void
LangChain.Providers.SpeechToTextResponse
LangChain.Providers.SpeechToTextResponse.Deconstruct(out string! values, out LangChain.Providers.Usage usage) -> void
LangChain.Providers.SpeechToTextResponse.SpeechToTextResponse() -> void
LangChain.Providers.SpeechToTextResponse.Text.get -> string!
LangChain.Providers.SpeechToTextResponse.Text.init -> void
LangChain.Providers.SpeechToTextResponse.Usage.get -> LangChain.Providers.Usage
LangChain.Providers.SpeechToTextResponse.Usage.init -> void
LangChain.Providers.SpeechToTextSettings
LangChain.Providers.SpeechToTextSettings.SpeechToTextSettings() -> void
LangChain.Providers.TextToImageModel
LangChain.Providers.TextToImageModel.OnPromptSent(string! prompt) -> void
LangChain.Providers.TextToImageModel.PromptSent -> System.EventHandler<string!>?
LangChain.Providers.TextToImageModel.TextToImageModel(string! id) -> void
LangChain.Providers.TextToImageRequest
LangChain.Providers.TextToImageRequest.Prompt.get -> string!
LangChain.Providers.TextToImageRequest.Prompt.init -> void
LangChain.Providers.TextToImageRequest.TextToImageRequest() -> void
LangChain.Providers.TextToImageResponse
LangChain.Providers.TextToImageResponse.Deconstruct(out byte[]! values, out LangChain.Providers.Usage usage) -> void
LangChain.Providers.TextToImageResponse.Deconstruct(out byte[]! values, out LangChain.Providers.Usage usage, out LangChain.Providers.TextToImageSettings! usedSettings) -> void
LangChain.Providers.TextToImageResponse.Images.get -> System.Collections.Generic.IReadOnlyList<LangChain.Providers.Data!>!
LangChain.Providers.TextToImageResponse.Images.init -> void
LangChain.Providers.TextToImageResponse.TextToImageResponse() -> void
LangChain.Providers.TextToImageResponse.ToByteArray() -> byte[]!
LangChain.Providers.TextToImageResponse.Usage.get -> LangChain.Providers.Usage
LangChain.Providers.TextToImageResponse.Usage.init -> void
LangChain.Providers.TextToImageResponse.UsedSettings.get -> LangChain.Providers.TextToImageSettings!
LangChain.Providers.TextToImageResponse.UsedSettings.init -> void
LangChain.Providers.TextToImageSettings
LangChain.Providers.TextToImageSettings.TextToImageSettings() -> void
LangChain.Providers.TextToSpeechRequest
LangChain.Providers.TextToSpeechRequest.Prompt.get -> string!
LangChain.Providers.TextToSpeechRequest.Prompt.init -> void
LangChain.Providers.TextToSpeechRequest.TextToSpeechRequest() -> void
LangChain.Providers.TextToSpeechResponse
LangChain.Providers.TextToSpeechResponse.Bytes.get -> byte[]!
LangChain.Providers.TextToSpeechResponse.Bytes.init -> void
LangChain.Providers.TextToSpeechResponse.Deconstruct(out byte[]! values, out LangChain.Providers.Usage usage) -> void
LangChain.Providers.TextToSpeechResponse.TextToSpeechResponse() -> void
LangChain.Providers.TextToSpeechResponse.ToByteArray() -> byte[]!
LangChain.Providers.TextToSpeechResponse.ToStream() -> System.IO.Stream!
LangChain.Providers.TextToSpeechResponse.Usage.get -> LangChain.Providers.Usage
LangChain.Providers.TextToSpeechResponse.Usage.init -> void
LangChain.Providers.TextToSpeechSettings
LangChain.Providers.TextToSpeechSettings.TextToSpeechSettings() -> void
LangChain.Providers.Usage
LangChain.Providers.Usage.InputTokens.get -> int
LangChain.Providers.Usage.InputTokens.init -> void
LangChain.Providers.Usage.Messages.get -> int
LangChain.Providers.Usage.Messages.init -> void
LangChain.Providers.Usage.OutputTokens.get -> int
LangChain.Providers.Usage.OutputTokens.init -> void
LangChain.Providers.Usage.PriceInUsd.get -> double
LangChain.Providers.Usage.PriceInUsd.init -> void
LangChain.Providers.Usage.Time.get -> System.TimeSpan
LangChain.Providers.Usage.Time.init -> void
LangChain.Providers.Usage.TotalTokens.get -> int
LangChain.Providers.Usage.Usage() -> void
LangChain.Providers.Usage.Usage(int InputTokens, int OutputTokens, int Messages, System.TimeSpan Time, double PriceInUsd) -> void
LangChain.Providers.WithDebugExtensions
override LangChain.Providers.ChatResponse.ToString() -> string!
override LangChain.Providers.Data.ToString() -> string!
override LangChain.Providers.Message.ToString() -> string!
override LangChain.Providers.SpeechToTextResponse.ToString() -> string!
static LangChain.Providers.ChatModelExtensions.EnsureNumbersOfTokensBelowContextLength(this LangChain.Providers.IChatModel! model, int value) -> void
static LangChain.Providers.ChatModelExtensions.EnsureNumbersOfTokensBelowContextLength(this LangChain.Providers.IChatModelWithTokenCounting! model, LangChain.Providers.ChatRequest! request) -> void
static LangChain.Providers.ChatModelExtensions.EnsureNumbersOfTokensBelowContextLength(this LangChain.Providers.IChatModelWithTokenCounting! model, string! text) -> void
static LangChain.Providers.ChatModelExtensions.EnsureNumbersOfTokensBelowContextLength(this LangChain.Providers.IChatModelWithTokenCounting! model, System.Collections.Generic.IReadOnlyCollection<LangChain.Providers.Message>! messages) -> void
static LangChain.Providers.ChatRequest.implicit operator LangChain.Providers.ChatRequest!(LangChain.Providers.Message message) -> LangChain.Providers.ChatRequest!
static LangChain.Providers.ChatRequest.implicit operator LangChain.Providers.ChatRequest!(LangChain.Providers.Message[]! messages) -> LangChain.Providers.ChatRequest!
static LangChain.Providers.ChatRequest.implicit operator LangChain.Providers.ChatRequest!(string! message) -> LangChain.Providers.ChatRequest!
static LangChain.Providers.ChatRequest.ToChatRequest(LangChain.Providers.Message message) -> LangChain.Providers.ChatRequest!
static LangChain.Providers.ChatRequest.ToChatRequest(string! message) -> LangChain.Providers.ChatRequest!
static LangChain.Providers.ChatRequest.ToChatRequest(System.Collections.Generic.IReadOnlyCollection<LangChain.Providers.Message>! messages) -> LangChain.Providers.ChatRequest!
static LangChain.Providers.ChatResponse.implicit operator LangChain.Providers.Message(LangChain.Providers.ChatResponse! response) -> LangChain.Providers.Message
static LangChain.Providers.ChatResponse.implicit operator LangChain.Providers.Message[]!(LangChain.Providers.ChatResponse! response) -> LangChain.Providers.Message[]!
static LangChain.Providers.ChatResponse.implicit operator LangChain.Providers.Usage(LangChain.Providers.ChatResponse! response) -> LangChain.Providers.Usage
static LangChain.Providers.ChatResponse.implicit operator string!(LangChain.Providers.ChatResponse! response) -> string!
static LangChain.Providers.ChatSettings.Calculate(LangChain.Providers.ChatSettings? requestSettings, LangChain.Providers.ChatSettings? modelSettings, LangChain.Providers.ChatSettings? providerSettings) -> LangChain.Providers.ChatSettings!
static LangChain.Providers.ChatSettings.Default.get -> LangChain.Providers.ChatSettings!
static LangChain.Providers.Data.FromBase64(string! base64) -> LangChain.Providers.Data!
static LangChain.Providers.Data.FromBytes(byte[]! bytes) -> LangChain.Providers.Data!
static LangChain.Providers.Data.FromStream(System.IO.Stream! stream) -> LangChain.Providers.Data!
static LangChain.Providers.Data.implicit operator byte[]!(LangChain.Providers.Data! file) -> byte[]!
static LangChain.Providers.Data.implicit operator LangChain.Providers.Data!(string! message) -> LangChain.Providers.Data!
static LangChain.Providers.Data.implicit operator string!(LangChain.Providers.Data! file) -> string!
static LangChain.Providers.Data.implicit operator System.IO.Stream!(LangChain.Providers.Data! file) -> System.IO.Stream!
static LangChain.Providers.Data.ToData(string! base64) -> LangChain.Providers.Data!
static LangChain.Providers.EmbeddingRequest.implicit operator LangChain.Providers.EmbeddingRequest!(string! message) -> LangChain.Providers.EmbeddingRequest!
static LangChain.Providers.EmbeddingRequest.implicit operator LangChain.Providers.EmbeddingRequest!(string![]! messages) -> LangChain.Providers.EmbeddingRequest!
static LangChain.Providers.EmbeddingRequest.ToEmbeddingRequest(string! message) -> LangChain.Providers.EmbeddingRequest!
static LangChain.Providers.EmbeddingRequest.ToEmbeddingRequest(string![]! messages) -> LangChain.Providers.EmbeddingRequest!
static LangChain.Providers.EmbeddingResponse.implicit operator float[]!(LangChain.Providers.EmbeddingResponse! response) -> float[]!
static LangChain.Providers.EmbeddingResponse.implicit operator float[]![]!(LangChain.Providers.EmbeddingResponse! response) -> float[]![]!
static LangChain.Providers.EmbeddingSettings.Default.get -> LangChain.Providers.EmbeddingSettings!
static LangChain.Providers.ImageToTextSettings.Calculate(LangChain.Providers.ImageToTextSettings? requestSettings, LangChain.Providers.ImageToTextSettings? modelSettings, LangChain.Providers.ImageToTextSettings? providerSettings) -> LangChain.Providers.ImageToTextSettings!
static LangChain.Providers.ImageToTextSettings.Default.get -> LangChain.Providers.ImageToTextSettings!
static LangChain.Providers.Message.Add(LangChain.Providers.Message left, LangChain.Providers.Message right) -> LangChain.Providers.Message
static LangChain.Providers.Message.Ai(string! content) -> LangChain.Providers.Message
static LangChain.Providers.Message.Empty.get -> LangChain.Providers.Message
static LangChain.Providers.Message.Human(string! content) -> LangChain.Providers.Message
static LangChain.Providers.Message.operator +(LangChain.Providers.Message a, LangChain.Providers.Message b) -> LangChain.Providers.Message
static LangChain.Providers.MessageStringExtensions.AsAiMessage(this string! text) -> LangChain.Providers.Message
static LangChain.Providers.MessageStringExtensions.AsChatMessage(this string! text) -> LangChain.Providers.Message
static LangChain.Providers.MessageStringExtensions.AsFunctionCallMessage(this string! text, string! functionName) -> LangChain.Providers.Message
static LangChain.Providers.MessageStringExtensions.AsFunctionResultMessage(this string! text, string! functionName) -> LangChain.Providers.Message
static LangChain.Providers.MessageStringExtensions.AsHistory(this System.Collections.Generic.IReadOnlyCollection<LangChain.Providers.Message>! messages) -> string!
static LangChain.Providers.MessageStringExtensions.AsHumanMessage(this string! text) -> LangChain.Providers.Message
static LangChain.Providers.MessageStringExtensions.AsSystemMessage(this string! text) -> LangChain.Providers.Message
static LangChain.Providers.ModerationRequest.implicit operator LangChain.Providers.ModerationRequest!(string! message) -> LangChain.Providers.ModerationRequest!
static LangChain.Providers.ModerationRequest.ToModerationRequest(string! message) -> LangChain.Providers.ModerationRequest!
static LangChain.Providers.ModerationResponse.implicit operator bool(LangChain.Providers.ModerationResponse! response) -> bool
static LangChain.Providers.ModerationSettings.Default.get -> LangChain.Providers.ModerationSettings!
static LangChain.Providers.SpeechToTextRequest.implicit operator LangChain.Providers.SpeechToTextRequest!(byte[]! bytes) -> LangChain.Providers.SpeechToTextRequest!
static LangChain.Providers.SpeechToTextRequest.implicit operator LangChain.Providers.SpeechToTextRequest!(string! path) -> LangChain.Providers.SpeechToTextRequest!
static LangChain.Providers.SpeechToTextRequest.implicit operator LangChain.Providers.SpeechToTextRequest!(System.IO.Stream! stream) -> LangChain.Providers.SpeechToTextRequest!
static LangChain.Providers.SpeechToTextRequest.ToSpeechToTextRequest(byte[]! bytes) -> LangChain.Providers.SpeechToTextRequest!
static LangChain.Providers.SpeechToTextRequest.ToSpeechToTextRequest(string! path) -> LangChain.Providers.SpeechToTextRequest!
static LangChain.Providers.SpeechToTextRequest.ToSpeechToTextRequest(System.IO.Stream! stream) -> LangChain.Providers.SpeechToTextRequest!
static LangChain.Providers.SpeechToTextResponse.implicit operator string!(LangChain.Providers.SpeechToTextResponse! response) -> string!
static LangChain.Providers.SpeechToTextSettings.Default.get -> LangChain.Providers.SpeechToTextSettings!
static LangChain.Providers.TextToImageRequest.implicit operator LangChain.Providers.TextToImageRequest!(string! message) -> LangChain.Providers.TextToImageRequest!
static LangChain.Providers.TextToImageRequest.ToTextToImageRequest(string! message) -> LangChain.Providers.TextToImageRequest!
static LangChain.Providers.TextToImageResponse.implicit operator byte[]!(LangChain.Providers.TextToImageResponse! response) -> byte[]!
static LangChain.Providers.TextToImageSettings.Default.get -> LangChain.Providers.TextToImageSettings!
static LangChain.Providers.TextToSpeechRequest.implicit operator LangChain.Providers.TextToSpeechRequest!(string! message) -> LangChain.Providers.TextToSpeechRequest!
static LangChain.Providers.TextToSpeechRequest.ToTextToSpeechRequest(string! message) -> LangChain.Providers.TextToSpeechRequest!
static LangChain.Providers.TextToSpeechResponse.implicit operator byte[]!(LangChain.Providers.TextToSpeechResponse! response) -> byte[]!
static LangChain.Providers.TextToSpeechResponse.implicit operator System.IO.Stream!(LangChain.Providers.TextToSpeechResponse! response) -> System.IO.Stream!
static LangChain.Providers.TextToSpeechSettings.Default.get -> LangChain.Providers.TextToSpeechSettings!
static LangChain.Providers.Usage.Add(LangChain.Providers.Usage left, LangChain.Providers.Usage right) -> LangChain.Providers.Usage
static LangChain.Providers.Usage.Divide(LangChain.Providers.Usage left, double right) -> LangChain.Providers.Usage
static LangChain.Providers.Usage.Empty.get -> LangChain.Providers.Usage
static LangChain.Providers.Usage.Multiply(LangChain.Providers.Usage left, double right) -> LangChain.Providers.Usage
static LangChain.Providers.Usage.operator *(LangChain.Providers.Usage a, double b) -> LangChain.Providers.Usage
static LangChain.Providers.Usage.operator +(LangChain.Providers.Usage a, LangChain.Providers.Usage b) -> LangChain.Providers.Usage
static LangChain.Providers.Usage.operator -(LangChain.Providers.Usage a, LangChain.Providers.Usage b) -> LangChain.Providers.Usage
static LangChain.Providers.Usage.operator /(LangChain.Providers.Usage a, double b) -> LangChain.Providers.Usage
static LangChain.Providers.Usage.Subtract(LangChain.Providers.Usage left, LangChain.Providers.Usage right) -> LangChain.Providers.Usage
static LangChain.Providers.WithDebugExtensions.UseConsoleForDebug<T>(this T model) -> T
virtual LangChain.Providers.ChatModel.ContextLength.get -> int
virtual LangChain.Providers.ChatModel.ContextLength.set -> void
virtual LangChain.Providers.SpeechToTextRequest.Dispose(bool disposing) -> void